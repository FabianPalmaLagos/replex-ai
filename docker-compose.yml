version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: replex-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: replex_ai
      POSTGRES_USER: replex_user
      POSTGRES_PASSWORD: replex_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - replex-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U replex_user -d replex_ai"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: replex-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - replex-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes

  # Adminer para gestión de base de datos (desarrollo)
  adminer:
    image: adminer:4-standalone
    container_name: replex-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - replex-network
    depends_on:
      - postgres
    profiles:
      - dev

  # Redis Commander para gestión de Redis (desarrollo)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: replex-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - replex-network
    depends_on:
      - redis
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  replex-network:
    driver: bridge 